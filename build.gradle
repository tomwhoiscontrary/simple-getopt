plugins {
    id 'java-library'
}

def javaVersion = '1.8'
assert System.getProperty('java.version').startsWith(javaVersion)
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

version = '1.0.0'

repositories {
    jcenter()
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest:2.1'
}

task examples
check.dependsOn examples

// let's see you do this in Bazel, eh?
compileTestJava.source.filter { it.name == 'CalendarExample.java' }.singleFile.eachLine { line ->
    def match = line =~ / * <dt>([^<]*)<\/dt><dd>([^<]*)<\/dd>/
    if (!match) return

    examples.dependsOn task("example (${match.group(1)})", type: JavaExec) {
        classpath = sourceSets.test.runtimeClasspath
        main = 'li.earth.urchin.twic.getopt.CalendarExample'
        args = match.group(2).split() as List
    }
}

jar {
    manifest {
        attributes(['Implementation-Title'  : project.name,
                    'Implementation-Version': version,
                    'Implementation-URL'    : 'https://github.com/tomwhoiscontrary/simple-getopt'])
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
    manifest = jar.manifest
}
assemble.dependsOn sourcesJar
